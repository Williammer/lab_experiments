{
  "name": "vue-i18n",
  "version": "2.1.0",
  "description": "Internationalization plugin of Vue.js",
  "main": "index.js",
  "scripts": {
    "test": "make ci"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kazupon/vue-i18n.git"
  },
  "keywords": [
    "Vue.js",
    "i18n",
    "internationalization",
    "plugin"
  ],
  "author": {
    "name": "kazuya kawaguchi"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kazupon/vue-i18n/issues"
  },
  "homepage": "https://github.com/kazupon/vue-i18n",
  "devDependencies": {
    "commander": "^2.8.1",
    "expect.js": "^0.3.1",
    "jshint": "^2.5.0",
    "karma": "^0.12.24",
    "karma-chrome-launcher": "^0.1.5",
    "karma-commonjs": "^0.0.12",
    "karma-coverage": "^0.2.6",
    "karma-coveralls": "^0.1.4",
    "karma-expect": "^1.1.0",
    "karma-firefox-launcher": "^0.1.3",
    "karma-mocha": "^0.1.9",
    "karma-phantomjs-launcher": "^0.1.4",
    "karma-safari-launcher": "^0.1.1",
    "karma-sauce-launcher": "^0.2.10",
    "mocha": "^1.18.2",
    "nightmare": "^1.6.5",
    "semi": "^3.1.1",
    "vue": "^0.12.0",
    "webpack": "^1.4.13"
  },
  "readme": "# vue-i18n\n\n[![Build Status](https://travis-ci.org/kazupon/vue-i18n.svg?branch=master)](https://travis-ci.org/kazupon/vue-i18n)\n[![Coverage Status](https://img.shields.io/coveralls/kazupon/vue-i18n.svg)](https://coveralls.io/r/kazupon/vue-i18n?branch=master)\n[![NPM version](https://badge.fury.io/js/vue-i18n.svg)](http://badge.fury.io/js/vue-i18n)\n[![Sauce Test Status](https://saucelabs.com/buildstatus/vue-i18n)](https://saucelabs.com/u/vue-i18n)\n\n\nInternationalization plugin of Vue.js\n\n\n# Requirements\n- works with Vue.js ^`0.12.0`\n\n\n# Instllation\n\n## npm\n\n```shell\n$ npm install vue-i18n\n```\n\n## bower\n\n```shell\n$ bower install vue-i18n\n```\n\n## duo\n\n```javascript\nvar i18n = require('kazupon/vue-i18n')\n\n```\n\n\n# Usage\n\n```javascript\nvar Vue = require('vue')\nvar i18n = require('vue-i18n')\n\n// ready translated locales\nvar locales = {\n  en: {\n    message: {\n      hello: 'the world'\n    }\n  },\n  ja: {\n    message: {\n      hello: 'ザ・ワールド'\n    }\n  }\n}\n\n// set plugin\nVue.use(i18n, {\n  lang: 'ja',\n  locales: locales\n})\n\n// create instance\nnew Vue({\n  el: '#test-i18n'\n})\n```\n\nTemplate the following:\n\n```html\n<div id=\"test-i18n\" class=\"message\">\n  <p>{{ $t(\"message.hello\") }}</p>\n</div>\n```\n\nOutput the following:\n\n```html\n<div id=\"test-i18n\" class=\"message\">\n  <p>ザ・ワールド</p>\n</div>\n```\n\n\n# Formatting\n\n## Named formatting\n\nLocale the following:\n\n```javascript\nvar locales = {\n  en: {\n    message: {\n      hello: '{msg} world'\n    }\n  }\n}\n```\n\nTemplate the following:\n\n```html\n<div class=\"message\">\n  <p>{{ $t('message.hello', { msg: \"hello\"}) }}</p>\n</div>\n```\n\nOutput the following:\n\n```html\n<div class=\"message\">\n  <p>hello world</p>\n</div>\n```\n\n## List formatting\n\nLocale the following:\n\n```javascript\nvar locales = {\n  en: {\n    message: {\n      hello: '{0} world'\n    }\n  }\n}\n```\n\nTemplate the following:\n\n```html\n<div class=\"message\">\n  <p>{{ $t('message.hello', [\"hello\"]) }}</p>\n</div>\n```\n\nOutput the following:\n\n```html\n<div class=\"message\">\n  <p>hello world</p>\n</div>\n```\n\n\n# API\n\n## $t(keypath, [lang], [arguments])\n- keypath: `String` **required**\n- lang: `String` **optional**\n- arguments: `Array | Object` **optional**\n\nTranslate the locale of `keypath`. If you specified `lang`, translate the locale of `lang`. If you specified `keypath` of list / named formatting local, you must specify `arguments` too. For `arguments` more details see [Formatting](https://github.com/kazupon/vue-i18n#formatting).\n\n\n# Options\n\n## Plugin options\n\n```javascript\nVue.use(plugin, {\n  lang: 'en',\n  locals: {\n    en: {\n      ...\n    },\n    ...\n    ja: {\n      ...\n    }\n  }\n})\n```\n\n### lang\nSpecify translate the language code.\n\nIf you abbreviated the `lang` option, translate as well as 'en' language code option (default: 'en').\n\n### locals\nSpecify translate some local dictionary.\n\nIf you abbreviated the `locales` option, set the empty local dictionary.\n\n\n# Configrations\n\n## Vue.config.lang\nGet or set a global translation language code. Default by `en` string value. You can change the language of the global level dynamic translation in your application. \n\nWhen specified with `lang` plugins option at `Vue.use`, `Vue.config.lang` is set that value.\n\n\n# Contributing\n- Fork it !\n- Create your top branch from `dev`: `git branch my-new-topic origin/dev`\n- Commit your changes: `git commit -am 'Add some topic'`\n- Push to the branch: `git push origin my-new-topic`\n- Submit a pull request to `dev` branch of `kazupon/vue-i18n` repository !\n\n\n# Testing\n\n```shell\n$ make test\n```\n\n\n# License\n\n## MIT\n\n[MIT](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "_id": "vue-i18n@2.1.0",
  "dist": {
    "shasum": "8e2f3fef9d43ab9fd7229baa7fff7aae52216de3"
  },
  "_from": "vue-i18n@",
  "_resolved": "https://registry.npmjs.org/vue-i18n/-/vue-i18n-2.1.0.tgz"
}
